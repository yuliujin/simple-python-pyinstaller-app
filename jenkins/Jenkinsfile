pipeline {
    agent none
    stages {
        stage('Check ubuntu version') {
            agent {
              dockerfile {
                filename 'Dockerfile'
                dir 'jenkins'
              }
            }
            steps {
                sh 'pip install --upgrade pip'
		sh 'pip install requests'
                sh 'python sources/baseami/upgrade/foundation_ami/upgrade_check.py'
                sh 'git config --global user.email "you@example.com"'
                sh 'git config --global user.name "Your Name"'
                sh 'git add sources/baseami/pure_base_ami_upgrade.js'
                sh 'git commit -m \'updated upgrade js file\''
            }
        }
        stage('Upgrade u14 if needed') {
            agent {
                docker {
                    image 'python:2-alpine'
                }
            }
            when {
              expression {
                 return fileExists('app3_trusty_upgrade_trigger')
              }
            }
	    steps {
                sh 'python sources/baseami/upgrade/foundation_ami/upgrade.py u14'
	    }
	    post {
		always {
			archiveArtifacts 'sources/baseami/pure_base_ami_upgrade.js'
		}
            }
       }
        stage('Upgrade u16 if needed') {
            agent {
                docker {
                    image 'python:2-alpine'
                }
            }
            when {
              expression {
                 return fileExists('app3_xenial_upgrade_trigger')
              }
            }
	    steps {
                sh 'python sources/baseami/upgrade/foundation_ami/upgrade.py u16'
	    }
	    post {
		always {
			archiveArtifacts 'sources/baseami/pure_base_ami_upgrade.js'
		}
            }
       }
        stage('Upgrade u18 if needed') {
            agent {
                docker {
                    image 'python:2-alpine'
                }
            }
            when {
              expression {
                 return fileExists('app3_bionic_upgrade_trigger')
              }
            }
	    steps {
                sh 'python sources/baseami/upgrade/foundation_ami/upgrade.py u18'
	    }
	    post {
		always {
			archiveArtifacts 'sources/baseami/pure_base_ami_upgrade.js'
		}
            }
       }
      stage('Check Datadog-agent version') {
            agent {
                docker {
                    image 'python:2-alpine'
                }
            }
	    steps {
                sh 'pip install --upgrade pip'
		sh 'pip install requests'
                sh 'python sources/baseami/upgrade/datadog/upgrade_check.py'
	    }
      }
      stage('Notify SRE team for datadog upgrade if needed') {
            agent {
                docker {
                    image 'python:2-alpine'
                }
            }
            when {
              expression {
                 return fileExists('app1_upgrade_trigger')
              }
            }
            steps {
              echo "need to notify SRE to upgrade datadog"
            }
      }
      stage('check enhanced nework ena version') {
            agent {
              dockerfile {
                filename 'Dockerfile'
                dir 'jenkins'
              }
            }
            steps {
              sh 'cd sources/baseami/upgrade/enhanced_network;rm -rf amzn-drivers;git clone https://github.com/amzn/amzn-drivers;cd amzn-drivers;git tag | tail -1 | awk -F\'_\' \'{print $3}\' > ../ena_version''
              sh 'python sources/baseami/upgrade/enhanced_network/upgrade_check.py'
            }
      }
      stage('Notify SRE team for ena upgrade if needed') {
            agent {
                docker {
                    image 'python:2-alpine'
                }
            }
            when {
              expression {
                 return fileExists('app2_upgrade_trigger')
              }
            }
            steps {
                     mail to: 'lyu@purestorage.com',
                     subject: "Datadog has newer version now.",
                     body: "Datadog has newer version now."
            }
    }
}
}
